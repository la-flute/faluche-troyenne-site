'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _enzymeToJson = require('enzyme-to-json');

var _enzymeToJson2 = _interopRequireDefault(_enzymeToJson);

var _AsyncCreatable = require('../AsyncCreatable');

var _AsyncCreatable2 = _interopRequireDefault(_AsyncCreatable);

var _Select = require('../Select');

var _Select2 = _interopRequireDefault(_Select);

var _components = require('../components');

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Menu = _components.components.Menu,
    Option = _components.components.Option;


test('defaults - snapshot', function () {
  var tree = (0, _enzyme.mount)(_react2.default.createElement(_AsyncCreatable2.default, null));
  expect((0, _enzymeToJson2.default)(tree)).toMatchSnapshot();
});

test('creates an inner Select', function () {
  var asyncCreatableWrapper = (0, _enzyme.mount)(_react2.default.createElement(_AsyncCreatable2.default, { className: 'react-select' }));
  expect(asyncCreatableWrapper.find(_Select2.default).exists()).toBeTruthy();
});

test('render decorated select with props passed', function () {
  var asyncCreatableWrapper = (0, _enzyme.mount)(_react2.default.createElement(_AsyncCreatable2.default, { className: 'foo' }));
  expect(asyncCreatableWrapper.find(_Select2.default).props().className).toBe('foo');
});

test('to show the create option in menu', function () {
  var asyncCreatableWrapper = (0, _enzyme.mount)(_react2.default.createElement(_AsyncCreatable2.default, { className: 'react-select' }));
  var inputValueWrapper = asyncCreatableWrapper.find('div.react-select__input input');
  asyncCreatableWrapper.setProps({ inputValue: 'a' });
  inputValueWrapper.simulate('change', { currentTarget: { value: 'a' } });
  expect(asyncCreatableWrapper.find(Option).last().text()).toBe('Create "a"');
});

test('to show loading and then create option in menu', function () {
  jest.useFakeTimers();
  var loadOptionsSpy = jest.fn(function (inputValue, callback) {
    return setTimeout(function () {
      return callback(_constants.OPTIONS);
    }, 200);
  });
  var asyncCreatableWrapper = (0, _enzyme.mount)(_react2.default.createElement(_AsyncCreatable2.default, { className: 'react-select', loadOptions: loadOptionsSpy }));
  var inputValueWrapper = asyncCreatableWrapper.find('div.react-select__input input');
  asyncCreatableWrapper.setProps({ inputValue: 'a' });
  inputValueWrapper.simulate('change', { currentTarget: { value: 'a' } });

  // to show a loading message while loading options
  expect(asyncCreatableWrapper.find(Menu).text()).toBe('Loading...');
  jest.runAllTimers();
  asyncCreatableWrapper.update();

  // show create options once options are loaded
  expect(asyncCreatableWrapper.find(Option).last().text()).toBe('Create "a"');
});